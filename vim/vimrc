scriptencoding utf-8
runtime bundle/vim-pathogen/autoload/pathogen.vim

let g:ale_completion_enabled = 1
set omnifunc=ale#completion#OmniFunc

call pathogen#infect()

colorscheme wombat
" show line numbers
set number             

filetype on
filetype plugin on
syntax on

set autoindent
set wildmenu
set mouse=a
set backspace=2

set ignorecase
set smartcase

set incsearch
set ruler
" auto load files
:set autoread
" show count of search
set shortmess-=S

" configure spell
hi clear SpellBad
hi SpellBad cterm=underline ctermfg=red

" always sync
augroup testgroup
  autocmd BufEnter * :syntax sync fromstart
augroup END

augroup makefile
  autocmd FileType make set noexpandtab shiftwidth=8 softtabstop=0
augroup END

let localleader = ','
inoremap jj <Esc>

" set ; to : in command mode
noremap : ;
noremap! : ;
noremap ; :
noremap! ; :
iunmap :
iunmap ;

" move to the next row as opposed to the next line (good for wrapped lines)
noremap j gj
noremap k gk

" Spaces instead of tab character
set expandtab
set smarttab
set shiftwidth=4
set softtabstop=4

" For wrapped lines
set nowrap
set showbreak=â•š
set linebreak nolist


"alt key for moving from file to file
noremap <A-k> <C-W>k
noremap <A-j> <C-W>j
noremap <A-h> <C-W>h
noremap <A-l> <C-W>l
noremap <A-p> <C-W>p
noremap <A-o> <C-W>o
noremap <A-n> <C-W>n
noremap <A-r> <C-W>r

"" Copy/Paste
noremap YY "+y<CR>
noremap P "+gP<CR>

"ca stands for command abbreviations
"always save all
ca w wa
ca W w
ca q1 q!

"force sudo save
cmap w!! w !sudo tee >/dev/null %

"Persistent Undo
set undofile
set undodir=~/.vim/undodir

" Fold options
set nofoldenable

" quickfix
noremap <C-n> :cnext<CR>
noremap <C-m> :cprevious<CR>

" markdown
let g:vimwiki_url_maxsave=0

" markdown drawer
nnoremap <Leader>md :MarkDrawer<cr>

"for CtrlP
let g:ctrlp_map = '<c-p>'
let g:ctrlp_cmd = 'CtrlP'
set wildignore+=*\\tmp\\*,*.swp,*.zip,*.exe
let g:ctrlp_root_markers = ['.gitignore']
let g:ctrlp_working_path_mode = 'a'
let g:ctrlp_by_filename = 1
let g:ctrlp_custom_ignore = {
  \ 'dir':  '\v[\/](node_modules|target|dist)|(\.(git|hg|svn))$',
  \ 'file': '\v\.(exe|so|dll|class)$',
  \ }

" NERDTree
let NERDTreeBookmarksFile=expand('$HOME/.vim-NERDTreeBookmarks')
let NERDTreeShowBookmarks=1
let NERDTreeChDirMode=2
let NERDTreeIgnore=['\.swp$']
noremap \\ :NERDTreeFind<CR>

" NERDCommenter
" Align line-wise comment delimiters flush left instead of following code indentation
let g:NERDDefaultAlign='left'
let g:NERDCommentEmptyLines=1

" vimwiki
let g:vimwiki_list = [{'path': '~/Dropbox/vimwiki', 'syntax': 'markdown', 'ext': '.md'}]

augroup markdownSpell
    autocmd!
    autocmd FileType markdown setlocal spell
    autocmd BufRead,BufNewFile *.md setlocal spell
augroup END

" Golang settings
augroup golang
  autocmd BufNewFile,BufRead *.go setlocal noexpandtab tabstop=4 shiftwidth=4
  let g:go_list_height=0
  let g:go_fmt_autosave=1
  let g:go_fmt_command="goimports"
  let g:go_list_type="quickfix"
  let g:go_highlight_build_constraints=1
  let g:go_highlight_generate_tags=1
  let g:go_build_tags="integration"
  "save file when :make(->:GoBuild) is called 
  set autowrite
augroup END

" Grepper
nmap gs <plug>(GrepperOperator)
xmap gs <plug>(GrepperOperator)
nnoremap <leader>* :Grepper -tool ag -cword -noprompt -highlight<cr>

" Airline
" Just show the filename (no path) in the tab
let g:airline_section_c = '%t'


"set white space characters
:set listchars=eol:$,tab:>-,trail:~,extends:>,precedes:<

augroup setSyntax
    autocmd!
    autocmd BufNewFile, BufRead *.gradle  set syntax=groovy
augroup END

let g:qs_highlight_on_keys = ['f', 'F']
let g:qs_max_chars=80

"cursor SI(start insert), EI(end insert)
let &t_SI = "\e[6 q"
let &t_EI = "\e[2 q"

set termguicolors
if len($TMUX) > 0
  let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
  let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"
endif

nnoremap ,b <CR>:call Reminder()<CR>

func! Reminder()
  let it = readfile('/home/kevino/projects/dotfiles/vim/reminder.txt')
  call popup_notification(it, #{ line: 2, col: 20, highlight: 'PmenuSel', time: 3000} )
endfunc

